name: Build and Release

on: push

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  SITE_DIR: /shipments

jobs:
  main:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-node@v1
        with:
          node-version: "12.x"
      - name: Authenticate with NPM
        run: |
          echo "//npm.pkg.github.com/:_authToken=$GITHUB_TOKEN" > ~/.npmrc
      - name: Keep npm cache around to speed up installs
        uses: actions/cache@v1
        with:
          path: ~/.npm
          key: ${{ runner.OS }}-build-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.OS }}-build-${{ env.cache-name }}-
            ${{ runner.OS }}-build-
            ${{ runner.OS }}-
      - name: Install dependencies
        run: npm ci --no-audit
      - name: Determine next release version
        run: |
          node .github/workflows/get-next-version.js > .version
          cat .version
      - name: Build
        run: npm run build
      - name: Lint
        run: npm run lint
      - name: Publish latest release to GitHub pages
        if: contains(github.ref, 'saga')
        run: |
          echo "machine github.com login authtoken password ${GITHUB_TOKEN}" > ~/.netrc
          git config --global user.email "actions@example.com"
          git config --global user.name "GitHub Actions"
          cd dist
          git init
          cp -v ../web/* ./
          git add ./*
          git commit -m 'latest release'
          git remote add origin https://github.com/${GITHUB_REPOSITORY}.git
          git push -f origin HEAD:gh-pages
      - name: Semantic release
        continue-on-error: true
        run: |
          npm i --no-save semantic-release
          npx semantic-release
